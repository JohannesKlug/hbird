<!-- SKUNKBIRD mission control system. -->
<!-- Integration of Hummingbird components using Camel -->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:camel="http://camel.apache.org/schema/spring"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="
	   		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	   		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
	   		http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<bean id="ssmodel" class="org.hbird.transport.xtce.XtceSpaceSystemModelFactory" factory-method="createSpaceSystemModel">
		<constructor-arg value="Thunderbird.xml"></constructor-arg>
	</bean>
	
	<bean id="packetDecoder" class="org.hbird.transport.protocols.ccsds.spacepacket.CcsdsPacketDecoder" />

	<bean id="publisher" class="org.hbird.spacesystempublisher.publishing.InMemorySpaceSystemPublisher">
		<property name="model" ref="ssmodel"></property>
	</bean>
	
	<bean id="encodings" factory-bean="publisher" factory-method="getEncodings"></bean>
	
	<bean id="payload-codec" class="org.hbird.transport.payloadcodec.InMemoryPayloadCodec">
		<constructor-arg ref="ssmodel" ></constructor-arg>
		<constructor-arg ref="encodings"></constructor-arg>
	</bean>
	
	<bean id="parameterChecker" class="org.hbird.test.integration.ParameterGroupChecker" />

	<!-- Transport beans -->
	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616" />
	</bean>
	
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
		<property name="maxConnections" value="8" />
		<property name="maximumActive" value="500" />
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>
	
	<bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
		<property name="connectionFactory" ref="pooledConnectionFactory" />
		<property name="transacted" value="false" />
		<property name="concurrentConsumers" value="10" />
	</bean>

	<bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="configuration" ref="jmsConfig" />
	</bean>
	
	<bean id="tmGenerator" class="org.hbird.test.integration.TmTcGenerator">
		<constructor-arg ref="ssmodel" ></constructor-arg>
	</bean>
	
	
	<task:scheduled-tasks scheduler="simScheduler">
		<task:scheduled ref="tmGenerator" method="generateGroup" fixed-rate="10" />
	</task:scheduled-tasks>

	<task:scheduler id="simScheduler" pool-size="2" />
	
	
	<!-- Packet Encoder -->
	<bean id="packetEncoder" class="org.hbird.transport.protocols.ccsds.spacepacket.CcsdsPacketEncoder">
	</bean>
	
	
	<camel:camelContext>
		<!-- Runs routes defined in Java in this package -->
		<camel:package>org.hbird.skunkbird</camel:package>
		
		<camel:route>
			<camel:from uri="seda:tmSource"/>
<!-- 			<camel:from uri="bean:tmGenerator"/> -->
			<camel:to uri="bean:payload-codec?method=encodeToGenericPayload" />
			<camel:convertBodyTo type="org.hbird.transport.protocols.ccsds.spacepacket.data.PacketPayload" />
			<camel:to uri="bean:packetEncoder" />
			<camel:convertBodyTo type="org.hbird.transport.protocols.ccsds.transferframe.data.FramePayload" />
			<camel:split>
				<camel:method ref="packetDecoder" method="decode"/>
				<camel:convertBodyTo type="org.hbird.transport.commons.data.GenericPayload" />
				<camel:to uri="bean:payload-codec?method=decode" />
				<camel:to uri="activemq:decodedTelemetryPayloads" />
<!-- 				<camel:to uri="bean:parameterChecker" /> -->
			</camel:split>
		</camel:route>
		
		<camel:route autoStartup="false">
			<camel:from uri="stream:file?fileName=binPacketTm.txt&amp;scanStream=true&amp;scanStreamDelay=10" />
<!-- 			<camel:to id="activeMqRawPayloads" uri="activemq:rawPayloads" /> -->
				<camel:convertBodyTo type="org.hbird.transport.protocols.ccsds.transferframe.data.FramePayload" />
				<camel:split><camel:method ref="packetDecoder" method="decode"/>
					<camel:convertBodyTo type="org.hbird.transport.commons.data.GenericPayload" />
					<camel:to uri="bean:payload-codec?method=decode" />
					<camel:to uri="bean:parameterChecker" />
				</camel:split>
		</camel:route>
		
	</camel:camelContext>

</beans>