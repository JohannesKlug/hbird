<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
	xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">


	<!-- Get a reference to a publisher service. -->
	<reference id="spaceSystemPublisherService"
		interface="org.hbird.core.spacesystempublisher.interfaces.SpaceSystemPublisher">
	</reference>

	<bean id="rotorSimulator" class="org.hbird.test.rotor.RotorSimulator">
		<property name="publisher" ref="spaceSystemPublisherService"></property>
	</bean>
	
	
	<!-- ActiveMQ Setup -->
	
	<bean id="jmsConnectionFactory" 
	   class="org.apache.activemq.ActiveMQConnectionFactory">
<!-- 	   <property name="brokerURL" value="tcp://192.168.3.153:61616" /> -->
	   <property name="brokerURL" value="tcp://localhost:61616" />
	</bean>
	
	<bean id="pooledConnectionFactory" 
	   class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
	   <property name="maxConnections" value="8" />
	   <property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>
	
	<bean id="jmsConfig" 
	   class="org.apache.camel.component.jms.JmsConfiguration">
	   <property name="connectionFactory" ref="pooledConnectionFactory"/>
	   <property name="concurrentConsumers" value="1"/>
	</bean>
	
	<bean id="activemq" 
	    class="org.apache.activemq.camel.component.ActiveMQComponent">
	    <property name="configuration" ref="jmsConfig"/>
	</bean>
	
	<!-- end ActiveMQ Setup -->
	

	<camelContext xmlns="http://camel.apache.org/schema/blueprint"
		xsi:schemaLocation="http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
		<route id="rotorSimulatorRoute">
			<from uri="timer://clock?fixedRate=true&amp;period=1000" />
			<to uri="bean:rotorSimulator?method=tick" />
			<!-- The idea is to route the parameterGroups returned from the sim to an activemq topic. 
				From there, we could encode it in all the different formats we support, and output those on topics again.
				We will host a running instance on the internet, so that people can play with it (command it, see TM, etc). 
			-->
			<to uri="activemq:rotorParameterGroups" />
			
			<!-- FIXME Needs a command route into the simulator bean! -->
		</route>
		
		<route>
			<from uri="activemq:rotorSimCmds"></from>
			<to uri="bean:rotorSimulator?method=slewRotor"></to>
		</route>
	</camelContext>

</blueprint>