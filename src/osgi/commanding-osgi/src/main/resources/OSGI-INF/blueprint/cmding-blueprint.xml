<?xml version="1.0" encoding="UTF-8"?>
<blueprint	xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" 
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
			xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">


	<!-- Get a reference to a publisher service. -->
	<reference id="spaceSystemPublisherService" 
			   interface="org.hbird.core.spacesystempublisher.interfaces.SpaceSystemPublisher">
	</reference>
	
	<!-- Command information service impl bean which uses the publisher to get command info -->
	<bean id="commandInformationService" 
		  class="org.hbird.application.commanding.provided.info.HbirdPublisherBasedCommandInfo"
		  init-method="init">
		<property name="publisher" ref="spaceSystemPublisherService"></property>
	</bean>
	

	<bean id="commandInModelChecker" class="org.hbird.application.commanding.provided.processing.CommandInModelChecker"></bean>

	<!-- Register command applications command information service as an OSGi service -->
	<service id="commandInfoService" 
			 interface="org.hbird.application.commanding.interfaces.info.CommandInformationService"
			 ref="commandInformationService">
		<service-properties>
		  	<!-- Adds DOSGi remote access to service interface -->
			<entry key="service.exported.interfaces" value="org.hbird.application.commanding.interfaces.info.CommandInformationService"/>
			<entry key="service.exported.configs" value="org.apache.cxf.rs"/>
			<entry key="service.exported.intents" value="HTTP"></entry>
			<entry key="org.apache.cxf.rs.httpservice.context" value="/commanding"/>
			<entry key="org.apache.cxf.rs.databinding" value="aegis"/>
		</service-properties>
	</service>

	<camelContext xmlns="http://camel.apache.org/schema/blueprint" 
				  xsi:schemaLocation="http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
		<route id="commandAccepting">
			<from uri="activemq:sendCommands"></from>
			<to uri="activemq:tmpTest"></to>
<!-- 			<camel:filter> -->
<!-- 				<camel:method bean="commandInModelChecker" method="checkCommand"></camel:method> -->
<!-- 				<camel:choice> -->
<!-- 					<camel:when> -->
<!-- 						<camel:method bean="CommandSendTimeFilter" method="shouldSendNow"></camel:method> -->
<!-- 						<camel:to uri="activemq:dispatchedCommands"></camel:to> -->
<!-- 					</camel:when> -->
<!-- 					<camel:otherwise> -->
<!-- 						<camel:log message="TODO send later cache" loggingLevel="WARN"></camel:log> -->
<!-- 					</camel:otherwise> -->
<!-- 				</camel:choice> -->
<!-- 			</camel:filter> -->
		</route>
	</camelContext>
	
</blueprint>